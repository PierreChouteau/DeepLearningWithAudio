#N canvas 132 30 1289 666 10;
#X obj 8 482 cnv 15 640 150 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 8 89 cnv 15 640 110 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-sound 64000 float 0;
#X coords 0 1 63999 -1 120 60 1 0 0;
#X restore 371 560 graph;
#X obj 1099 200 dac~;
#X obj 1099 143 vline~;
#X msg 1099 124 1 \, 63998 4000;
#X obj 1099 162 tabread4~ \$0-sound;
#N canvas 760 492 450 300 print_input 0;
#X obj 139 24 inlet;
#X obj 147 97 outlet;
#X obj 201 65 print gansynth input;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X restore 829 106 pd print_input;
#X obj 875 169 print gansynth output;
#X obj 1099 181 *~ 0.5;
#X obj 72 548 bng 20 250 50 0 empty empty empty 17 7 0 10 -232576 -1
-1;
#X obj 72 570 f \$0;
#N canvas 501 282 450 300 loaded 0;
#X obj 102 102 tgl 15 0 empty empty loaded 17 7 0 10 -262144 -1 -1
0 1;
#X obj 103 68 f 1;
#X obj 101 43 route loaded unloaded;
#X obj 127 68 f 0;
#X obj 101 25 r \$0-gansynth_out;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X coords 0 -1 1 1 60 20 2 100 100;
#X restore 403 158 pd loaded;
#X obj 847 147 list trim;
#X obj 1099 73 route synthesized;
#X obj 767 169 s \$0-gansynth_out;
#X obj 1099 55 r \$0-gansynth_out;
#X obj 8 210 cnv 15 640 180 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 53 276 bng 20 250 50 0 empty empty empty 17 7 0 10 -232576 -1
-1;
#X obj 53 300 f \$0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-amplitudes 8192 float 2;
#X coords 0 -10 8192 10 120 60 1 0 0;
#X restore 458 310 graph;
#X obj 733 128 pyext. sopimagenta.gansynth.pyext gansynth @detach 1
;
#X obj 8 8 cnv 15 640 70 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 13 32 We apply the GANSpace technique by Härkönen et al.
to a GANSynth model \, allowing us to discover directions of significant
change in the latent space using Principal Component Analysis (PCA).
The found directions can be used to navigate the latent space in a
more controlled manner., f 104;
#X obj 829 78 r \$0-in;
#X text 13 93 1 - Load a saved checkpoint., f 104;
#X text 13 113 The "load <ckpt>" message loads a trained model from
checkpoint folder <ckpt>. If the checkpoint folder is in the same folder
as this patch \, you can simply give its name., f 104;
#X obj 153 171 s \$0-in;
#X text 13 211 2 - Load GANSpace PCA components., f 104;
#X text 13 231 The PCA components are computed by the gansynth_ganspace
script \, which produces a .pickle file. The "load_ganspace_components
<pca_file> <edits_array>" message loads the components from <pca_file>
and registers the array <edits_array> to hold coefficients for each
component., f 104;
#X obj 53 363 s \$0-in;
#X obj 8 401 cnv 15 650 70 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 72 609 s \$0-in;
#X obj 659 281 cnv 15 620 190 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj 666 291 array-slider \$0-amplitudes 0;
#X obj 869 291 array-slider \$0-amplitudes 1;
#X obj 1072 291 array-slider \$0-amplitudes 2;
#X obj 666 335 array-slider \$0-amplitudes 3;
#X obj 869 335 array-slider \$0-amplitudes 4;
#X obj 1072 335 array-slider \$0-amplitudes 5;
#X obj 666 378 array-slider \$0-amplitudes 6;
#X obj 869 378 array-slider \$0-amplitudes 7;
#X obj 1072 378 array-slider \$0-amplitudes 8;
#X obj 666 421 array-slider \$0-amplitudes 9;
#X obj 869 421 array-slider \$0-amplitudes 10;
#X obj 501 568 bng 20 250 50 0 empty empty play 22 10 0 10 -232576
-1 -1;
#X obj 501 593 s \$0-play-in;
#X obj 1117 103 r \$0-play-in;
#X obj 1099 103 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 153 150 load pruu;
#X msg 53 320 load_ganspace_components pruu/pruu_conv0_ipca_4194304.pickle
\$1-amplitudes, f 48;
#X text 13 424 Use the sliders to edit the coefficients for each component
and move in the latent space. The first few ones will produce the most
audible changes. The movement is relative to the to the "center" of
the space \, defined as the mean value along each component., f 104
;
#X text 13 404 3 - Move along the PCA directions., f 104;
#X text 13 12 ---- GANSpaceSynth without the random latent vector ----
, f 104;
#X text 13 486 4 - Synthesize., f 104;
#X text 13 506 The "synthesize_noz <out_array> <pitch>" message synthesizes
an audio segment using pitch <pitch> and writes it to <out_array>.
Coefficients are read from the array registered in step 2 \, causing
a corresponding movement in the latent space., f 104;
#X msg 72 588 synthesize_noz \$1-sound 32 \$1-amplitudes;
#X text 831 571 We make use of the following open source projects:
, f 59;
#X text 831 591 - pyext/flext (GPL v2), f 59;
#X text 831 630 Copyright (C) 2021 SOPI Research Group \, Aalto University
, f 59;
#X text 831 611 - Magenta (Apache 2.0), f 59;
#X text 831 485 ganspacesynth_noz.pd \, Deep Learning with Audio course
material for generating audio with GANSpaceSynth without random latent
vectors \, is provided by SOPI research group (https://sopi.aalto.fi)
Aalto University \, School of Arts \, Design and Architecture 2021
\, under the GPL license GNU General Public License version 2 | Open
Source Initiative (https://opensource.org/licenses/gpl-2.0.php).,
f 59;
#N canvas 343 233 386 293 license 0;
#X text 9 227 For further information please contact to Koray Tahiroglu
\; email: koray.tahiroglu@aalto.fi \, mail: Aalto University School
of Arts \, Design and Architecture \, Department of Media \, room J101
\, Väre Otaniementie 14 \, 2150 Espoo \, Finland;
#X text 11 12 This program is free software \; you can redistribute
it and/or modify it under the terms of the GNU General Public License
as published by the Free Software Foundation \; either version 2 of
the License \, or (at your option) any later version.;
#X text 11 89 This program is distributed in the hope that it will
be useful \, but WITHOUT ANY WARRANTY \; without even the implied warranty
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.;
#X text 10 161 You should have received a copy of the GNU General Public
License along with this program \; if not \, write to the Free Software
Foundation \, Inc. \, 51 Franklin Street \, Fifth Floor \, Boston \,
MA 02110-1301 \, USA.;
#X restore 1208 561 pd license;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 9 0;
#X connect 7 0 21 1;
#X connect 9 0 3 0;
#X connect 9 0 3 1;
#X connect 10 0 11 0;
#X connect 11 0 56 0;
#X connect 13 0 8 0;
#X connect 13 0 15 0;
#X connect 14 0 48 0;
#X connect 16 0 14 0;
#X connect 18 0 19 0;
#X connect 19 0 50 0;
#X connect 21 0 13 0;
#X connect 24 0 7 0;
#X connect 45 0 46 0;
#X connect 47 0 5 0;
#X connect 48 0 5 0;
#X connect 49 0 27 0;
#X connect 50 0 30 0;
#X connect 56 0 32 0;
#X coords 0 666 1 665 0 0 0;
