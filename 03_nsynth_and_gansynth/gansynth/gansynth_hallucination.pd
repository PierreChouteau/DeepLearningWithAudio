#N canvas 15 75 1240 533 10;
#X obj 12 199 cnv 15 830 320 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 12 88 cnv 15 830 100 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-sound 224000 float 0;
#X coords 0 1 223999 -1 200 140 1 0 0;
#X restore 865 261 graph;
#X obj 1091 382 dac~;
#X obj 1092 312 vline~;
#X obj 1091 335 tabread4~ \$0-sound;
#N canvas 760 492 450 300 print_input 0;
#X obj 139 24 inlet;
#X obj 147 97 outlet;
#X obj 201 65 print gansynth input;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X restore 869 37 pd print_input;
#X obj 869 142 print gansynth output;
#X obj 1091 357 *~ 0.5;
#N canvas 830 362 450 300 loaded 0;
#X obj 102 102 tgl 15 0 empty empty loaded 17 7 0 10 -4034 -1 -1 0
1;
#X obj 99 19 inlet;
#X obj 103 68 f 1;
#X obj 101 43 route loaded unloaded;
#X obj 127 68 f 0;
#X obj 183 118 unpack f f;
#X obj 288 146 s sample_rate;
#X obj 148 201 s sample_max_length;
#X obj 145 165 expr $f1 / $f2;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 3 0 5 0;
#X connect 3 1 4 0;
#X connect 4 0 0 0;
#X connect 5 0 8 0;
#X connect 5 1 6 0;
#X connect 5 1 8 1;
#X connect 8 0 7 0;
#X coords 0 -1 1 1 60 20 2 100 100;
#X restore 1135 140 pd loaded;
#X obj 870 82 list trim;
#N canvas 830 401 450 300 parse_length 0;
#X obj 113 29 inlet;
#X obj 108 193 outlet;
#X obj 108 123 - 1;
#X obj 108 146 pack \$1 \$2;
#X obj 108 100 t f f;
#X msg 108 169 1 \, \$1 \$2;
#X obj 112 65 f;
#X obj 246 53 r sample_rate;
#X obj 173 119 expr $f1 / $f2 * 1000;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 4 1 8 0;
#X connect 5 0 1 0;
#X connect 6 0 4 0;
#X connect 7 0 8 1;
#X connect 8 0 3 1;
#X restore 1091 288 pd parse_length;
#X obj 1090 221 bng 30 250 50 0 empty empty Play 32 15 0 10 -4034 -1
-1;
#X msg 1165 229 stop;
#X obj 1030 112 route hallucinated;
#N canvas 468 108 812 595 sample_shape 0;
#X obj 159 313 weightedsum;
#X floatatom 104 261 5 0 0 0 - - -;
#X floatatom 168 261 5 0 0 0 - - -;
#X floatatom 239 261 5 0 0 0 - - -;
#X floatatom 309 261 5 0 0 0 - - -;
#X obj 104 120 vsl 15 128 0 1 0 0 empty empty StartTrim 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 168 120 vsl 15 128 0 1 0 0 empty empty Attack 0 -9 0 10 -262144
-1 -1 6350 1;
#X obj 239 120 vsl 15 128 0 1 0 0 empty empty Sustain 0 -9 0 10 -262144
-1 -1 12700 1;
#X obj 309 120 vsl 15 128 0 1 0 0 empty empty Decay 0 -9 0 10 -262144
-1 -1 6350 1;
#X obj 172 390 *;
#X obj 200 390 *;
#X obj 231 391 *;
#X obj 261 390 *;
#X obj 340 407 print;
#X obj 311 344 r sample_max_length;
#X obj 232 342 bang;
#X obj 98 17 loadbang;
#X msg 99 58 0;
#X msg 160 61 0.5;
#X msg 230 63 1;
#X msg 310 64 0.5;
#X obj 137 465 s s_trim;
#X obj 209 465 s s_att;
#X obj 276 465 s s_sus;
#X obj 357 465 s s_dec;
#X connect 0 0 9 0;
#X connect 0 1 10 0;
#X connect 0 2 11 0;
#X connect 0 3 12 0;
#X connect 5 0 0 0;
#X connect 6 0 0 1;
#X connect 7 0 0 2;
#X connect 8 0 0 3;
#X connect 9 0 1 0;
#X connect 9 0 21 0;
#X connect 10 0 2 0;
#X connect 10 0 22 0;
#X connect 11 0 3 0;
#X connect 11 0 23 0;
#X connect 12 0 4 0;
#X connect 12 0 24 0;
#X connect 14 0 9 1;
#X connect 14 0 10 1;
#X connect 14 0 11 1;
#X connect 14 0 12 1;
#X connect 14 0 13 0;
#X connect 14 0 15 0;
#X connect 15 0 9 0;
#X connect 15 0 10 0;
#X connect 15 0 11 0;
#X connect 15 0 12 0;
#X connect 16 0 17 0;
#X connect 16 0 18 0;
#X connect 16 0 19 0;
#X connect 16 0 20 0;
#X connect 17 0 5 0;
#X connect 18 0 6 0;
#X connect 19 0 7 0;
#X connect 20 0 8 0;
#X coords 0 -1 1 1 250 180 2 100 100;
#X restore 299 330 pd sample_shape;
#N canvas 584 181 696 522 hallucination_settings 0;
#X obj 57 118 vsl 15 128 1 20 0 0 empty empty NoteCount 0 -9 0 10 -262144
-1 -1 2674 1;
#X obj 120 118 vsl 15 128 0 20 0 0 empty empty InterpolationSteps 0
-9 0 10 -262144 -1 -1 3175 1;
#X obj 234 118 vsl 15 128 0 1 0 0 empty empty SampleSpacing 0 -9 0
10 -262144 -1 -1 5080 1;
#X floatatom 58 258 5 0 0 0 - - -;
#X floatatom 123 260 5 0 0 0 - - -;
#X floatatom 236 261 5 0 0 0 - - -;
#X obj 32 325 s note_count;
#X obj 150 330 s interp_steps;
#X obj 360 190 r sample_max_length;
#X obj 333 231 expr ($f2 + 1) * $f1 \;;
#X obj 106 289 int;
#X obj 24 285 int;
#X obj 57 10 loadbang;
#X msg 63 46 5;
#X msg 110 47 5;
#X msg 194 52 0.4;
#X obj 281 319 s sample_spacing;
#X connect 0 0 11 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 6 0;
#X connect 4 0 7 0;
#X connect 5 0 16 0;
#X connect 8 0 9 1;
#X connect 9 0 5 0;
#X connect 10 0 4 0;
#X connect 11 0 3 0;
#X connect 12 0 13 0;
#X connect 12 0 14 0;
#X connect 12 0 15 0;
#X connect 13 0 0 0;
#X connect 14 0 1 0;
#X connect 15 0 2 0;
#X coords 0 -1 1 1 270 180 2 50 100;
#X restore 20 331 pd hallucination_settings;
#X obj 569 330 bng 30 250 50 0 empty empty Generate 35 15 0 10 -4034
-1 -1;
#X obj 569 419 f \$0;
#X msg 569 473 hallucinate \$1-sound \$2 \$3 \$4 \$5 \$6 \$7 \$8;
#N canvas 501 264 779 439 read_arguments 0;
#X obj 286 146 r s_trim;
#X obj 297 165 r s_att;
#X obj 310 185 r s_sus;
#X obj 326 205 r s_dec;
#X obj 236 85 r note_count;
#X obj 254 106 r interp_steps;
#X obj 272 126 r sample_spacing;
#X obj 209 284 pack f f f f f f f f;
#X obj 180 126 inlet;
#X obj 220 338 outlet;
#X connect 0 0 7 4;
#X connect 1 0 7 5;
#X connect 2 0 7 6;
#X connect 3 0 7 7;
#X connect 4 0 7 1;
#X connect 5 0 7 2;
#X connect 6 0 7 3;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X restore 569 446 pd read_arguments;
#X obj 870 59 pyext. sopimagenta.gansynth.pyext gansynth @detach 1
;
#X msg 384 143 load pruu;
#X obj 384 164 s \$0-in;
#X obj 869 12 r \$0-in;
#X obj 569 494 s \$0-in;
#X obj 12 7 cnv 15 830 70 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 16 11 ---- GANSynth Hallucination ----, f 136;
#X text 16 31 One way of overcoming GANSynth's 4-second limitation
is by stitching together generated samples into a longer piece. In
this example \, you can sample random points in the latent space \,
and synthesize a "hallucination" moving through the points and interpolated
points between them., f 136;
#X text 16 92 1 - Load a saved checkpoint., f 136;
#X text 16 112 The "load <ckpt>" message loads a trained model from
checkpoint folder <ckpt>. If the checkpoint folder is in the same folder
as this patch \, you can simply give its name., f 136;
#X text 16 202 2 - Generate Hallucination., f 136;
#X text 16 242 InterpolationSteps: number of interpolation steps to
generate between each successive pair of random points, f 136;
#X text 16 262 SampleSpacing: seconds between starting playback of
each successive generated sample, f 136;
#X text 16 282 StartTrim: seconds to remove from the beginning of each
generated sample (useful e.g. if you get some silence at the beginning)
, f 136;
#X text 16 302 Attack/Sustain/Decay: length in seconds of attack/sustain/decay
segments of the amplitude envelope applied to each generated sample
, f 136;
#X text 16 222 NoteCount: number of random latent space points to sample
, f 136;
#N canvas 499 360 400 198 copyright 0;
#X text 17 100 We make use of the following open source projects:,
f 59;
#X text 17 120 - pyext/flext (GPL v2), f 59;
#X text 17 159 Copyright (C) 2021 SOPI Research Group \, Aalto University
, f 59;
#X text 17 140 - Magenta (Apache 2.0), f 59;
#X text 17 14 gansynth_hallucination.pd \, which provides a template
for generating audio hallucinations with GANSynth \, is provided by
SOPI research group (https://sopi.aalto.fi) Aalto University \, School
of Arts \, Design and Architecture 2021 \, under the GPL license GNU
General Public License version 2 | Open Source Initiative (https://opensource.org/licenses/gpl-2.0.php).
, f 59;
#X restore 1003 463 pd copyright;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 21 1;
#X connect 8 0 3 0;
#X connect 8 0 3 1;
#X connect 10 0 7 0;
#X connect 10 0 14 0;
#X connect 11 0 4 0;
#X connect 12 0 11 0;
#X connect 13 0 4 0;
#X connect 14 0 11 0;
#X connect 14 1 9 0;
#X connect 17 0 18 0;
#X connect 18 0 20 0;
#X connect 19 0 25 0;
#X connect 20 0 19 0;
#X connect 21 0 10 0;
#X connect 22 0 23 0;
#X connect 24 0 6 0;
#X connect 24 0 13 0;
#X coords 0 533 1 532 0 0 0;
